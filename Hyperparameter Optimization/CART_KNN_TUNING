{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"CART_KNN_TUNING","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyNbIU9Oe52pGW8AhxoVXlee"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","metadata":{"id":"_Ek0_PkeuSfp"},"source":["*   Decision Tree Classifier\n","*   KNN Classifier"]},{"cell_type":"code","metadata":{"id":"pIIyCA1XuKhH","executionInfo":{"status":"ok","timestamp":1619240409634,"user_tz":240,"elapsed":454,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","from numpy import mean\n","from numpy import std\n","from pandas import read_csv\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import RepeatedStratifiedKFold\n","from sklearn.pipeline import Pipeline\n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.preprocessing import StandardScaler\n","from sklearn import preprocessing\n","\n","from sklearn.metrics import f1_score, precision_score, recall_score\n","from sklearn.metrics import classification_report, confusion_matrix, roc_curve, auc\n","from sklearn.metrics import accuracy_score\n","from sklearn.metrics import mean_squared_error\n","from sklearn.metrics import mean_squared_error\n","from sklearn.metrics import r2_score, make_scorer\n","from sklearn import metrics\n","from tabulate import tabulate\n","\n","from sklearn.model_selection import train_test_split\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import KFold\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.decomposition import PCA\n","from sklearn.model_selection import GridSearchCV"],"execution_count":27,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"resources":{"http://localhost:8080/nbextensions/google.colab/files.js":{"data":"Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK","ok":true,"headers":[["content-type","application/javascript"]],"status":200,"status_text":"OK"}},"base_uri":"https://localhost:8080/","height":77},"id":"BSE_mnGpuNGC","executionInfo":{"status":"ok","timestamp":1619232913830,"user_tz":240,"elapsed":5331,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"cc27eb09-0faa-4d99-ce09-de7f36d62d4a"},"source":["#upload the file in the lab\n","from google.colab import files\n","uploaded = files.upload()\n","#read the datafile using pandas read_csv"],"execution_count":2,"outputs":[{"output_type":"display_data","data":{"text/html":["\n","     <input type=\"file\" id=\"files-9c02194b-c82f-4f38-8aef-033f226635bc\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-9c02194b-c82f-4f38-8aef-033f226635bc\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script src=\"/nbextensions/google.colab/files.js\"></script> "],"text/plain":["<IPython.core.display.HTML object>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["Saving new_Imputed_knn.csv to new_Imputed_knn (14).csv\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8gWg9yv5vUzr","executionInfo":{"status":"ok","timestamp":1619232915508,"user_tz":240,"elapsed":495,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"8185de9f-9225-4fc2-be68-88c3ed2217e8"},"source":["import io\n","Final_DF= pd.read_csv(io.BytesIO(uploaded['new_Imputed_knn.csv']))\n","Final_DF.columns = [\"age\", \"sex\", \"cp\", \"trestbps\",\"chol\", \"fbs\", \"restecg\",\"thalach\", \"exang\", \"oldpeak\", \"slope\", \"ca\", \"thal\", \"num\"]\n","Final_DF"],"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>num</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.714286</td>\n","      <td>1</td>\n","      <td>0.000000</td>\n","      <td>0.541667</td>\n","      <td>0.285714</td>\n","      <td>1.000000</td>\n","      <td>1.0</td>\n","      <td>0.633803</td>\n","      <td>0.0</td>\n","      <td>0.556818</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.750000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.795918</td>\n","      <td>1</td>\n","      <td>1.000000</td>\n","      <td>0.666667</td>\n","      <td>0.388031</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0.338028</td>\n","      <td>1.0</td>\n","      <td>0.465909</td>\n","      <td>0.5</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.795918</td>\n","      <td>1</td>\n","      <td>1.000000</td>\n","      <td>0.333333</td>\n","      <td>0.277992</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0.485915</td>\n","      <td>1.0</td>\n","      <td>0.590909</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>1.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.183673</td>\n","      <td>1</td>\n","      <td>0.666667</td>\n","      <td>0.416667</td>\n","      <td>0.318533</td>\n","      <td>0.000000</td>\n","      <td>0.0</td>\n","      <td>0.894366</td>\n","      <td>0.0</td>\n","      <td>0.693182</td>\n","      <td>1.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.265306</td>\n","      <td>0</td>\n","      <td>0.333333</td>\n","      <td>0.416667</td>\n","      <td>0.229730</td>\n","      <td>0.000000</td>\n","      <td>1.0</td>\n","      <td>0.788732</td>\n","      <td>0.0</td>\n","      <td>0.454545</td>\n","      <td>0.0</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>715</th>\n","      <td>0.857143</td>\n","      <td>1</td>\n","      <td>1.000000</td>\n","      <td>0.291667</td>\n","      <td>0.340046</td>\n","      <td>0.000000</td>\n","      <td>0.5</td>\n","      <td>0.225352</td>\n","      <td>1.0</td>\n","      <td>0.295455</td>\n","      <td>0.5</td>\n","      <td>0.350985</td>\n","      <td>1.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>716</th>\n","      <td>0.857143</td>\n","      <td>1</td>\n","      <td>1.000000</td>\n","      <td>0.500000</td>\n","      <td>0.383377</td>\n","      <td>1.000000</td>\n","      <td>0.0</td>\n","      <td>0.683099</td>\n","      <td>1.0</td>\n","      <td>0.522727</td>\n","      <td>0.5</td>\n","      <td>0.330718</td>\n","      <td>1.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>717</th>\n","      <td>0.897959</td>\n","      <td>1</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.309130</td>\n","      <td>0.216794</td>\n","      <td>1.0</td>\n","      <td>0.380282</td>\n","      <td>0.0</td>\n","      <td>0.477273</td>\n","      <td>0.5</td>\n","      <td>0.666667</td>\n","      <td>0.632318</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>718</th>\n","      <td>0.918367</td>\n","      <td>0</td>\n","      <td>0.666667</td>\n","      <td>0.666667</td>\n","      <td>0.354750</td>\n","      <td>0.000000</td>\n","      <td>0.5</td>\n","      <td>0.429577</td>\n","      <td>0.0</td>\n","      <td>0.295455</td>\n","      <td>0.0</td>\n","      <td>0.140394</td>\n","      <td>0.000000</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>719</th>\n","      <td>0.938776</td>\n","      <td>1</td>\n","      <td>0.333333</td>\n","      <td>0.541667</td>\n","      <td>0.298949</td>\n","      <td>0.149232</td>\n","      <td>0.5</td>\n","      <td>0.443662</td>\n","      <td>0.0</td>\n","      <td>0.443182</td>\n","      <td>0.0</td>\n","      <td>0.211581</td>\n","      <td>0.423843</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>720 rows × 14 columns</p>\n","</div>"],"text/plain":["          age  sex        cp  trestbps  ...  slope        ca      thal  num\n","0    0.714286    1  0.000000  0.541667  ...    1.0  0.000000  0.750000    0\n","1    0.795918    1  1.000000  0.666667  ...    0.5  1.000000  0.000000    1\n","2    0.795918    1  1.000000  0.333333  ...    0.5  0.666667  1.000000    1\n","3    0.183673    1  0.666667  0.416667  ...    1.0  0.000000  0.000000    0\n","4    0.265306    0  0.333333  0.416667  ...    0.0  0.000000  0.000000    0\n","..        ...  ...       ...       ...  ...    ...       ...       ...  ...\n","715  0.857143    1  1.000000  0.291667  ...    0.5  0.350985  1.000000    1\n","716  0.857143    1  1.000000  0.500000  ...    0.5  0.330718  1.000000    1\n","717  0.897959    1  0.666667  0.666667  ...    0.5  0.666667  0.632318    0\n","718  0.918367    0  0.666667  0.666667  ...    0.0  0.140394  0.000000    1\n","719  0.938776    1  0.333333  0.541667  ...    0.0  0.211581  0.423843    1\n","\n","[720 rows x 14 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"1l73hHLYvoyg"},"source":["\n","\n","---\n","\n"]},{"cell_type":"markdown","metadata":{"id":"cuGGnEDRR6nP"},"source":["## **Decision Tree Classifier**"]},{"cell_type":"code","metadata":{"id":"zzvLF835vpvF","executionInfo":{"status":"ok","timestamp":1619232917848,"user_tz":240,"elapsed":727,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#Standard Scaler on the values\n","#Splitting the data into 70% train - 30% test\n","from sklearn.model_selection import train_test_split\n","data = Final_DF.values\n","X, y = data[:, :-1], data[:, -1]\n","X = StandardScaler().fit_transform(X)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=7)"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"id":"54DvWz0AX_a2","executionInfo":{"status":"ok","timestamp":1619232919007,"user_tz":240,"elapsed":471,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#Pipieline to optimize hyperparameters for PCA and DecisionTreeClassifier\n","pca = PCA()\n","dec_tree = DecisionTreeClassifier()\n","\n","pipe = Pipeline(steps=[('pca', pca),\n","                       ('dec_tree', dec_tree)])"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"L0k-X610QFzW","executionInfo":{"status":"ok","timestamp":1619232920696,"user_tz":240,"elapsed":452,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#Principal Component Analysis requires a parameter 'n_components' to be optimised.\n","#'n_components' signifies the number of components to keep after reducing the dimension. \n","\n","n_components = list(range(1,X.shape[1]+1,1))"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"WQgYpSKFQXT3","executionInfo":{"status":"ok","timestamp":1619232922275,"user_tz":240,"elapsed":451,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#DecisionTreeClassifier requires two parameters 'criterion' and 'max_depth' to be optimised by GridSearchCV. \n","#So we have set these two parameters as a list of values form which GridSearchCV will select the best value of parameter. \n","\n","criterion = ['gini', 'entropy']\n","max_depth = [2,4,8,10,12]"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"HEgfAvWcQiXP","executionInfo":{"status":"ok","timestamp":1619232924056,"user_tz":240,"elapsed":450,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#Now we are creating a dictionary to set all the parameters options for different objects. \n","\n","parameters = dict(pca__n_components=n_components,\n","                  dec_tree__criterion=criterion,\n","                  dec_tree__max_depth=max_depth)"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VRyyOb14QtAH","executionInfo":{"status":"ok","timestamp":1619232928481,"user_tz":240,"elapsed":3292,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"23097a54-c323-4281-d452-3f9453b9297a"},"source":["#Grid Search for PCA and CART\n","\n","clf_GS = GridSearchCV(pipe, parameters)\n","optimized_CART_model = clf_GS.fit(X_train, y_train)\n","\n","print('Best Criterion:', optimized_CART_model.best_estimator_.get_params()['dec_tree__criterion'])\n","print('Best max_depth:', optimized_CART_model.best_estimator_.get_params()['dec_tree__max_depth'])\n","print('Best Number Of Components:', optimized_CART_model.best_estimator_.get_params()['pca__n_components'])\n","print(); print(optimized_CART_model.best_estimator_.get_params()['dec_tree'])"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Best Criterion: gini\n","Best max_depth: 2\n","Best Number Of Components: 10\n","\n","DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',\n","                       max_depth=2, max_features=None, max_leaf_nodes=None,\n","                       min_impurity_decrease=0.0, min_impurity_split=None,\n","                       min_samples_leaf=1, min_samples_split=2,\n","                       min_weight_fraction_leaf=0.0, presort='deprecated',\n","                       random_state=None, splitter='best')\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yRPzxYqFhopl","executionInfo":{"status":"ok","timestamp":1619232932092,"user_tz":240,"elapsed":522,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["CART_y_pred = optimized_CART_model.predict(X_test)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"lws1HYMsaUJv","executionInfo":{"status":"ok","timestamp":1619232933657,"user_tz":240,"elapsed":610,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"99ae9235-7ec0-4f9e-c3e4-36e9a8052979"},"source":["print(f\"Mean Accuracy: {metrics.accuracy_score(y_test, CART_y_pred)}\")\n","print(f\"Precision Score: {precision_score(y_test,CART_y_pred)}\")\n","print(f\"Recall Score: {recall_score(y_test,CART_y_pred)}\")\n","print(f\"F1 Score: {f1_score(y_test,CART_y_pred)}\")"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Mean Accuracy: 0.8009259259259259\n","Precision Score: 0.8478260869565217\n","Recall Score: 0.7289719626168224\n","F1 Score: 0.7839195979899496\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"tprjSbCjEpEw"},"source":["## **KNN Classifier**"]},{"cell_type":"code","metadata":{"id":"_89ej_V-FLHT","executionInfo":{"status":"ok","timestamp":1619239527147,"user_tz":240,"elapsed":429,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#Splitting in to input output and Test Train\n","X, y = data[:, :-1], data[:, -1]\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=7)"],"execution_count":17,"outputs":[]},{"cell_type":"code","metadata":{"id":"cQ8u6bpG00Dx","executionInfo":{"status":"ok","timestamp":1619239590578,"user_tz":240,"elapsed":482,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["#function to measure and print different performance metrics\n","def Print_Metrics(y_test,X_test,y_predict_test,X_train,y_train,modelName):\n","    print('\\nModel performance on the test data set:')\n","\n","    accuracy_test   = accuracy_score(y_test, y_predict_test)\n","    F1_test         = f1_score(y_test, y_predict_test)\n","    precision_test  = precision_score(y_test, y_predict_test, average='binary')\n","    recall_test     = recall_score(y_test, y_predict_test, average='binary')\n","    auc_test        = metrics.roc_auc_score(y_test, y_predict_test)\n","    r2_test         = metrics.r2_score(y_test, y_predict_test)\n","\n","\n","    header = [\"Metric\", \"Test\"]\n","    table  = [\n","               [\"accuracy\",  accuracy_test],\n","               [\"precision\", precision_test],\n","               [\"F1\",        F1_test],\n","               [\"r2\",        r2_test],\n","               [\"AUC\",       auc_test]\n","             ]\n","    result = {\n","        \"accuracy\":accuracy_test,\n","        \"precision\": precision_test,\n","        \"F1\":F1_test,\n","        \"r2\":r2_test,\n","        \"AUC\":auc_test\n","    }\n","    data = [[modelName,accuracy_test,precision_test,F1_test,r2_test,auc_test]]\n","    df_result = pd.DataFrame(data, columns = ['ModelName','Test accuracy','precision', 'F1', 'r2', 'AUC'])\n","    print(tabulate(table, header, tablefmt=\"fancy_grid\"))\n","    return df_result"],"execution_count":18,"outputs":[]},{"cell_type":"code","metadata":{"id":"tZCaXb8fEzoQ","executionInfo":{"status":"ok","timestamp":1619239741450,"user_tz":240,"elapsed":458,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["knn_pipe = Pipeline([\n","                          ('scale', StandardScaler()),\n","                          ('pca', PCA()),\n","                          ('KNN', KNeighborsClassifier())\n","                       ])"],"execution_count":19,"outputs":[]},{"cell_type":"code","metadata":{"id":"tvn5jd-ZMCzH"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"SbbnWcxaEzrZ","executionInfo":{"status":"ok","timestamp":1619240296341,"user_tz":240,"elapsed":481,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["# Define hyperparam for DT and SelectKBest\n","\n","KNN_Param = [\n","  {\n","    'KNN__n_neighbors' :[2,4,6,8,10,12,14,16], \n","    'KNN__algorithm' : ['auto', 'ball_tree', 'kd_tree', 'brute'],\n","    'KNN__leaf_size' :[1,2,3,4,5,6,7,8,9,10],\n","    'KNN__p' :[1,2,3,4,5],\n","    'pca__n_components' :[6,7,8,9,10]\n","  }\n","]"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QqZE_kZl-hi-","executionInfo":{"status":"ok","timestamp":1619240415004,"user_tz":240,"elapsed":467,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"8ba5d19d-2d96-4aeb-9ea9-24df0c6c4934"},"source":["# Define cross validation\n","kfold = StratifiedKFold(n_splits=10, random_state=42, shuffle=False)\n","\n","# Defining Score to evaluate the model\n","scoring = {\n","          'AUC':'roc_auc', \n","           'Accuracy':make_scorer(accuracy_score),\n","          'precision_score': make_scorer(precision_score),\n","          'recall_score': make_scorer(recall_score)\n","           }\n","\n","# Define grid search\n","KNN_grid = GridSearchCV(\n","  knn_pipe,\n","  param_grid=KNN_Param,\n","  cv=kfold,\n","  scoring=scoring,\n","  refit='AUC',\n","  verbose=1,\n","  n_jobs=-1\n",")"],"execution_count":28,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.7/dist-packages/sklearn/model_selection/_split.py:296: FutureWarning: Setting a random_state has no effect since shuffle is False. This will raise an error in 0.24. You should leave random_state to its default (None), or set shuffle=True.\n","  FutureWarning\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"XdfSzrIXMCwU"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BKK57T7X-w2s","executionInfo":{"status":"ok","timestamp":1619241539432,"user_tz":240,"elapsed":1098597,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"37c40311-5d93-401f-bfab-f0aa8fa2bc16"},"source":["# Fitting the model using X_train and y_train\n","knn_model = KNN_grid.fit(X_train, y_train)"],"execution_count":30,"outputs":[{"output_type":"stream","text":["Fitting 10 folds for each of 8000 candidates, totalling 80000 fits\n"],"name":"stdout"},{"output_type":"stream","text":["[Parallel(n_jobs=-1)]: Using backend LokyBackend with 2 concurrent workers.\n","[Parallel(n_jobs=-1)]: Done 390 tasks      | elapsed:    4.2s\n","[Parallel(n_jobs=-1)]: Done 2790 tasks      | elapsed:   29.8s\n","[Parallel(n_jobs=-1)]: Done 6790 tasks      | elapsed:  1.2min\n","[Parallel(n_jobs=-1)]: Done 12390 tasks      | elapsed:  2.2min\n","[Parallel(n_jobs=-1)]: Done 19590 tasks      | elapsed:  3.5min\n","[Parallel(n_jobs=-1)]: Done 28390 tasks      | elapsed:  6.1min\n","[Parallel(n_jobs=-1)]: Done 38790 tasks      | elapsed:  9.0min\n","[Parallel(n_jobs=-1)]: Done 50790 tasks      | elapsed: 11.2min\n","[Parallel(n_jobs=-1)]: Done 64390 tasks      | elapsed: 14.1min\n","[Parallel(n_jobs=-1)]: Done 79590 tasks      | elapsed: 18.2min\n","[Parallel(n_jobs=-1)]: Done 80000 out of 80000 | elapsed: 18.3min finished\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"-N7cmhqoE0Im","executionInfo":{"status":"ok","timestamp":1619241587340,"user_tz":240,"elapsed":454,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}}},"source":["# predict based on test data\n","y_pred_knn = knn_model.predict(X_test)"],"execution_count":31,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9B51j9Tz_IT9","executionInfo":{"status":"ok","timestamp":1619241771891,"user_tz":240,"elapsed":478,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"4a3c844d-95e8-4093-815d-fa9bfb7d1c71"},"source":["# Print Metrics to evaluate model\n","sgb_Metrics = Print_Metrics(y_test,X_test,y_pred_knn,X_train,y_train,'KNeighborsClassifier')"],"execution_count":35,"outputs":[{"output_type":"stream","text":["\n","Model performance on the test data set:\n","╒═══════════╤══════════╕\n","│ Metric    │     Test │\n","╞═══════════╪══════════╡\n","│ accuracy  │ 0.828704 │\n","├───────────┼──────────┤\n","│ precision │ 0.857143 │\n","├───────────┼──────────┤\n","│ F1        │ 0.819512 │\n","├───────────┼──────────┤\n","│ r2        │ 0.314756 │\n","├───────────┼──────────┤\n","│ AUC       │ 0.828303 │\n","╘═══════════╧══════════╛\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"AZMxR3-QBzgF","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1619241638569,"user_tz":240,"elapsed":633,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"74f2dae8-f648-4088-937d-b7ce6781b0e2"},"source":["KNN_grid.best_estimator_.get_params()"],"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'KNN': KNeighborsClassifier(algorithm='auto', leaf_size=1, metric='minkowski',\n","                      metric_params=None, n_jobs=None, n_neighbors=16, p=4,\n","                      weights='uniform'),\n"," 'KNN__algorithm': 'auto',\n"," 'KNN__leaf_size': 1,\n"," 'KNN__metric': 'minkowski',\n"," 'KNN__metric_params': None,\n"," 'KNN__n_jobs': None,\n"," 'KNN__n_neighbors': 16,\n"," 'KNN__p': 4,\n"," 'KNN__weights': 'uniform',\n"," 'memory': None,\n"," 'pca': PCA(copy=True, iterated_power='auto', n_components=9, random_state=None,\n","     svd_solver='auto', tol=0.0, whiten=False),\n"," 'pca__copy': True,\n"," 'pca__iterated_power': 'auto',\n"," 'pca__n_components': 9,\n"," 'pca__random_state': None,\n"," 'pca__svd_solver': 'auto',\n"," 'pca__tol': 0.0,\n"," 'pca__whiten': False,\n"," 'scale': StandardScaler(copy=True, with_mean=True, with_std=True),\n"," 'scale__copy': True,\n"," 'scale__with_mean': True,\n"," 'scale__with_std': True,\n"," 'steps': [('scale', StandardScaler(copy=True, with_mean=True, with_std=True)),\n","  ('pca',\n","   PCA(copy=True, iterated_power='auto', n_components=9, random_state=None,\n","       svd_solver='auto', tol=0.0, whiten=False)),\n","  ('KNN',\n","   KNeighborsClassifier(algorithm='auto', leaf_size=1, metric='minkowski',\n","                        metric_params=None, n_jobs=None, n_neighbors=16, p=4,\n","                        weights='uniform'))],\n"," 'verbose': False}"]},"metadata":{"tags":[]},"execution_count":34}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TW21HqXzVpxw","executionInfo":{"status":"ok","timestamp":1619241952456,"user_tz":240,"elapsed":448,"user":{"displayName":"Syed Muhammad Sabih","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gj5NdkvdP-twD7rHN_GOSV00Q1DD6CA5V5VKp-LwQ=s64","userId":"09410600974586347271"}},"outputId":"45d6c03a-c583-44f9-93e1-5eb203098f06"},"source":["KNN_grid.best_estimator_"],"execution_count":40,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(memory=None,\n","         steps=[('scale',\n","                 StandardScaler(copy=True, with_mean=True, with_std=True)),\n","                ('pca',\n","                 PCA(copy=True, iterated_power='auto', n_components=9,\n","                     random_state=None, svd_solver='auto', tol=0.0,\n","                     whiten=False)),\n","                ('KNN',\n","                 KNeighborsClassifier(algorithm='auto', leaf_size=1,\n","                                      metric='minkowski', metric_params=None,\n","                                      n_jobs=None, n_neighbors=16, p=4,\n","                                      weights='uniform'))],\n","         verbose=False)"]},"metadata":{"tags":[]},"execution_count":40}]},{"cell_type":"code","metadata":{"id":"eOHG9EJXMCsD"},"source":[""],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"vlw_AhSZMCeX"},"source":[""],"execution_count":null,"outputs":[]}]}